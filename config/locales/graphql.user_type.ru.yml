# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.
#
# Scaffold:

###################
#description: |
#  *<TEXT>*
#
#  **Возвращаемое значение:** <TEXT>
#
#  **Пример запроса:**
#  ```
#  <CODE>
#  ```
#
#  **Пример ответа сервера:**
#  ```
#  <CODE>
#  ```
####################


###################
#args:
#  argument: |
#    <TEXT>
#
#    **Обязательный**
#
#    **Тип:** `Type`
#
#    **Возможные значения:**
#
#    + `значение 1` - <TEXT>;
#
#    + `значение 2` - <TEXT>.
####################


ru:
  graphql:
    user_type:
      type_description: |
        *Представление сущности `Пользователь` в GraphQL.* Соответствует модели `User`.

      id: |
        *Идентификатор пользователя.*

        **Возвращаемое значение:** `Integer`.
      email: |
        *Имейл пользователя.*
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `String`.
      username: |
        *Ник (username) пользователя*

        **Возвращаемое значение:** `String`.
      first_name: |
        *Имя пользователя.*

        **Возвращаемое значение:** `String`.
      gender: |
        *Пол данного пользователя.*

        **Возвращаемое значение:** `String`.

        **Возможные значения:**

        + `male`

        + `female`

        + `nil`
      zip_code: |
        *Почтовый индекс пользователя.*

        **Возвращаемое значение:** `String`.
      phone: |
        *Телефонный номер пользователя.*

        **Возвращаемое значение:** `String`.
      birthday: |
        *Дата дня рождения пользователя. Используется следующий формат: 'yyyy-mm-dd'

        **Возвращаемое значение:** `String`.
      language: |
        *Язык который пользователь предпочитает использовать.*

        **Возвращаемое значение:** `String`.
      description: |
        *Короткая биография / произвольная информация о пользователе.*

        **Возвращаемое значение:** `String`.
      cover_image_url: |
        *Ссылка на картинку-баннер, которая используется на странице профиля пользователя.*

        **Возвращаемое значение:** `String`.
      is_online: |
        *Флаг позволяющий проверить онлайн статус пользователя.*

        **Возвращаемое значение:** `Boolean`.
      created_at: |
        *Дата регистрации пользователя.* Используется следующий формат: 'yyyy-mm-dd'.

        **Возвращаемое значение:** `String`.
      updated_at: |
        *Дата последнего изменения данных о пользователе.* Используется следующий формат: 'yyyy-mm-dd'.

        **Возвращаемое значение:** `String`.
      current_sign_in_ip: |
        *Текущий / последний IP адрес, с которого пользователь авторизовался.*
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `String`.
      access_token: |
        *Специальный токен доступа, который используется для идентификации прользователя.*
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `String`.
      client_id: |
        *Специальный идентификатор устройства, с которого пользователь посетил сайт.*
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `String`.
      is_completed: |
        *Флаг позволяющий проверить заполнил ли пользователь минимально необходимый набор данных о себе.*
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `Boolean`.
      likes_count: |
        *Суммарное количество лайков поставленных данным пользователем.*

        **Возвращаемое значение:** `Integer`.
      pictures_count: |
        *Суммарное количество изображений загруженных данным юзером во все галлереи.*

        **Возвращаемое значение:** `Integer`.
      bubbles_count: |
        *Количество бабблов участником которых является данный пользователь.*

        **Возвращаемое значение:** `Integer`.
      bubbles:
        description: |
          *Список бабблов участником которых является данный пользователь.*

          **Возвращаемое значение:** массив объектов `Bubble (BubbleType)`.

          **Пример запроса:**
          ```
            ...
              bubbles {
                edges {
                  node {
                    # some BubbleType object fields
                    name
                  }
                }
              }
            ...
          ```

          **Пример ответа сервера:**
          ```
            ...
              "bubbles": {
                "edges": [
                  {
                    "node": {
                      "name": "Best bubble"
                    }
                  },
                  {
                    "node": {
                      "name": "Test #1"
                    }
                  }
                ]
              }
            ...
          ```
        args:
          random: |
            Позволяет отсортировать результат в случайном порядке

            **Тип:** `Boolean`
          keyword: |
           Позволяет отфильтровать результат в соответствии с переданным шаблоном

           **Тип:** `String`
      friendship_status: |
        *Показывает установлено ли отношение дружбы между пользователями и в каком статусе она пребывает.*
        Поле имеет смылс в случае запроса данных о другом пользователе.

        **Возвращаемое значение:** `String`.

        **Возможные значения:**

        + `pending`

        + `approved`

        + `blocked`

        + `nil`
      friends_count: |
        *Количество друзей у данного пользователя.*

        **Возвращаемое значение:** `Integer`.
      friends:
        description: |
          *Возвроащает список друзей текущего пользователя.*
          Значение данного поля недоступно другим пользователям.
          Для других пользователей будет возвращен пустой массив `[]`

          **Возвращаемое значение:** массив объектов типа `User (UserType)`.

          **Пример запроса:**
          ```
            ...
              friends {
                edges {
                  node {
                    # some UserType object fields
                    username
                  }
                }
              }
            ...
          ```

          **Пример ответа сервера:**
          ```
            ...
              "friends": {
                "edges": [
                  {
                    "node": {
                      "username": "alex"
                    }
                  },
                  {
                    "node": {
                      "username": "dimi"
                    }
                  }
                ]
              }
            ...
          ```
        args:
          online: |
            Позволяет фильтровать список друзей по онлайн статусу.

            **Тип:** `Boolean`

            **Возможные значения:**

            + `true` - все друзья, которые в данный момент онлайн на сайте;

            + `false` - все друзья, которые в данный момент оффлайн на сайте.

            Если не передавать этот параметр, то сервер не будет учитывать онлайн статус друзей в результирующей выборке.
          keyword: |
            Позволяет фильтровать список пользователей по полям `username` и `first name`. Без учета регистра букв.

            **Тип:** `String`
          sort_by: |
            Позволяет сортировать список друзей.

            **Тип:** `String`

            **Возможные значения:**

            + `last_message_date` - сортировка выполняется по дате последнего сообщения полученного от друга в вилчате.
          all: |
            Применяется только в совокупности с параметром `sort_by='last_message_date'`

            **Тип:** `Boolean`

            **Возможные значения:**

            + `true` - результат не подвергается дополнительной фильтрации;

            + `false` (по умолчанию) - результат содержит только тех друзей, с которыми ранее велась личная переписка (непустая история вилчата)
      birthday_friends:
        description: |
          *Возвроащает список друзей текущего пользователя, у которых скоро будет День рождения.*
          Интервал времени составляет 7 дней начиная с сегодня. Значение данного поля недоступно другим пользователям.
          Для других пользователей будет возвращен пустой массив `[]`

          **Возвращаемое значение:** массив объектов типа `User (UserType)`.

          **Пример запроса:**
          ```
            ...
              birthday_friends {
                edges {
                  node {
                    # some UserType object fields
                    username
                  }
                }
              }
            ...
          ```

          **Пример ответа сервера:**
          ```
            ...
              "birthday_friends": {
                "edges": [
                  {
                    "node": {
                      "username": "alex"
                    }
                  },
                  {
                    "node": {
                      "username": "dimi"
                    }
                  }
                ]
              }
            ...
          ```
      notifications:
        description: |
          *Позволяет получить уведомления адресованные текущему пользователю.*
          Значение данного поля недоступно другим пользователям.

          **Возвращаемое значение:** массив объектов типа `Notification (NotificationType)`.

          **Пример запроса:**
          ```
            ...
              notifications {
                edges {
                  node {
                    # some NotificationType object fields
                    text
                  }
                }
              }
            ...
          ```

          **Пример ответа сервера:**
          ```
            ...
              "notifications": {
                "edges": [
                  {
                    "node": {
                      "text": "some text"
                    }
                  },
                  {
                    "node": {
                      "text": "some text"
                    }
                  }
                ]
              }
            ...
          ```
        args:
          status: |
            Позволяет фильтровать уведомления по признаку прочитанное/непрочитанное

            **Тип:** `String`

            **Возможные значения:**

            + `read` - будут возвращены только ранее прочитанные уведомления.

            + `unread`  - будут возвращены только непрочитанные уведомления

            Если параметр отсутствует, то данная характеристика не будет учитываться.
      wheel_chat_channel_name: |
        *Имя вилчат канала между текущим пользователем и его другом.*
        Данное поле имеет смысл запрашивать вместе с информацией о друге.
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `String`.

        **Примеры:** '1_8', '1001_1002'
      wheel_chat_last_message: |
        *Последнее сообщение из вилчата между текущим пользователем и его другом.*
        Данное поле имеет смысл запрашивать вместе с информацией о друге.
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** объект типа `WheelChatMessage (WheelChat:MessageType)`.

        **Пример запроса:**
        ```
          ...
            wheel_chat_last_message {
              # some WheelChat::MessageType object fields
              text
            }
          ...
        ```

        **Пример ответа сервера:**
        ```
          ...
            "wheel_chat_last_message": {
              "text": "some text"
            }
          ...
        ```
      wheel_chat_missed_messages_count: |
        *Количество пропущенных/непрочитанных сообщений в вилчате, общем для текущего пользователя и его друга*
        Данное поле имеет смысл запрашивать вместе с информацией о друге.
        Значение данного поля недоступно другим пользователям.

        **Возвращаемое значение:** `Integer`.
      user_role_in_bubble: |
        *Роль пользователя в указанном баббле.* Баббл берется из контекста данного запроса.
        Данное поле имеет смысл запрашивать в качестве дополнительной информации об участниках какого-либо баббла.
        Пользователь может узнать свою роль. Роль другого пользователя могут узнать только владелец и модераторы баббла.

        **Возвращаемое значение:**

        + `owner`

        + `moderator`

        + `guest`
      user_online_in_bubble: |
        *Показывает находится ли данный пользователь сейчас на страницах этого баббла*. Баббл берется из контекста данного запроса.
        Данное поле имеет смысл запрашивать в качестве дополнительной информации об участниках какого-либо баббла.

        **Возвращаемое значение:** `Boolean`



