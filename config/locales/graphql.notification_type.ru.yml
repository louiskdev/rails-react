
ru:
  graphql:
    notification_type:
      type_description: |
        *Представление сущности персональных уведомлений в GraphQL.* Пользователи получают эти уведомления,
        когда в приложении происходит какое-то событие. Например, отправлен запрос дружбы
        Соответствует rails модели `Notification`.

      id: |
        *Идентификатор уведомления.*

        **Возвращаемое значение:** `ID`.
      text: |
        *Текст уведомления.*

        **Возвращаемое значение:** `String`.
      created_at: |
        *Дата создания уведомления.*

        **Возвращаемое значение:** `String`.
      code: |
       *Специальный числовой код, позволяющий определить категорию данного уведомления.*

       **Возвращаемое значение:** `Integer`.
      object_id: |
        *Идентификатор объекта, которому посвящено уведомление.*

        **Возвращаемое значение:** `Integer`.
      object_type: |
        *Тип объекта, которому посвящено уведомление.*

        **Возвращаемое значение:** `String`.
      activity_id: |
        *Идентификатор активности (базового элемента фида).* Необходим для навигации.
        Например, для реализации перехода на страницу поста после клика по уведомлению.

        **Возвращаемое значение:** `Integer`.
      rating: |
        *Числовой рейтинг связанного объекта.* Данное поле имеет непустое значение только в уведомлениях
        посвященных присвоению/изменению рейтинга какого-либо объекта (например поста).

        **Возвращаемое значение:** `Integer`.
      bubble_id: |
        *Идентификатор баббла.* Данное поле имеет непустое значение если связанный объект (например пост)
        создан в виджете данного баббла.

        **Возвращаемое значение:** `Integer`.
      bubble: |
        *Баббл относящийся к данному уведомлению.* Может отсутствовать.

        **Возвращаемое значение:** `Bubble (BubbleType)`.
      initiator: |
        *Инициатор данного уведомления.* В настоящее время иницатором может быть только другой пользователь.

        **Возвращаемое значение:** `User (UserType)`.

        **Пример запроса:**
        ```
          ...
            initiator {
              username
            }
          ...
        ```

        **Пример ответа сервера:**
        ```
          ...
            "initiator": {
              "username": "alex"
            }
          ...
        ```
      read_at: |
        *Дата когда уведомление было прочитано пользователем.*

        **Возвращаемое значение:** `String`.
      unread: |
        *Флаг определяющий прочитано ли уведомление пользователем*

        **Возвращаемое значение:** `Boolean`.
      new_member_token: |
        *Специальный токен из приглашения* (если данное уведомление посвящено приглашению в баббл).

        **Возвращаемое значение:** `String`.
